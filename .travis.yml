language: shell
os: linux
dist: xenial

script:
  - |
    mkdir build && cd build; \
    if [ -n "$MAC_LIBOMP" ]; then \
        cmake -DCMAKE_INSTALL_PREFIX=. -DOpenMP_C_FLAGS="-Xpreprocessor -fopenmp -I/usr/local/opt/libomp/include" -DOpenMP_CXX_FLAGS="-Xpreprocessor -fopenmp -I/usr/local/opt/libomp/include" -DOpenMP_C_LIB_NAMES=omp -DOpenMP_CXX_LIB_NAMES=omp -DOpenMP_omp_LIBRARY=/usr/local/opt/libomp/lib/libomp.a .. || exit 1; \
    else \
        cmake -DCMAKE_INSTALL_PREFIX=. $CMAKE_EXTRA .. || exit 1; \
    fi; \
    make -j $(nproc --all || sysctl -n hw.ncpu) || exit 1; \
    if [[ "$(command -v mpirun)" != "" ]]; then \
        make install || exit 1; \
        export PATH="$(pwd)/bin:$(pwd)/scripts:$PATH"; \
        echo -e "leak:libmpi\nleak:libhwloc\nleak:libopen-pal\nleak:mca_db_hash\nleak:mca_bml_r2\nleak:libltdl\nleak:mca_mtl_psm2\nleak:mca_btl_openib\nleak:mca_rml_ofi\nleak:__strdup\nleak:realloc" > "$(pwd)/LSan.supp"; \
        export LSAN_OPTIONS="suppressions=$(pwd)/LSan.supp"; \
        (cd ../data && ./test.sh) || exit 1; \
    fi

before_install:
  - export CC
  - export CXX

jobs:
  include:
    - addons:
        apt:
          packages:
            - cmake
            - build-essential
            - g++-8
            - gcc-8
            - mpi-default-bin
            - mpi-default-dev
      arch: arm64
      env: CC=gcc-8 CXX=g++-8
      dist: bionic
    - addons:
        apt:
          packages:
            - cmake
            - build-essential
            - g++-8
            - gcc-8
            - mpi-default-bin
            - mpi-default-dev
      arch: ppc64le
      dist: bionic
      env: CC=gcc-8 CXX=g++-8
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - cmake
            - gcc-4.8
            - g++-4.8
      env: CC=gcc-4.8 CXX=g++-4.8
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - cmake
            - gcc-4.8
            - g++-4.8
            - mpi-default-bin
            - mpi-default-dev
      env: CC=gcc-4.8 CXX=g++-4.8
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - cmake
            - gcc-8
            - g++-8
      env: CC=gcc-8 CXX=g++-8
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - cmake
            - gcc-8
            - g++-8
            - mpi-default-bin
            - mpi-default-dev
      env: CC=gcc-8 CXX=g++-8 CMAKE_EXTRA="-DENABLE_SANITIZERS=1 -DCMAKE_BUILD_TYPE=ASan"
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-3.8
          packages:
            - cmake
            - clang-3.8
            - libomp-dev
      env: CC=clang-3.8 CXX=clang++-3.8
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-3.8
          packages:
            - cmake
            - clang-3.8
            - libomp-dev
            - mpi-default-bin
            - mpi-default-dev
      env: CC=clang-3.8 CXX=clang++-3.8
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-7
          packages:
            - cmake
            - clang-7
            - libc++-7-dev
            - libc++abi-7-dev
            - libomp-7-dev
      env: CC=clang-7 CXX=clang++-7
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-10 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - cmake
            - clang-10
            - libc++-10-dev
            - libc++abi-10-dev
            - libomp-10-dev
            - mpi-default-bin
            - mpi-default-dev
      env: CC=clang-10 CXX=clang++-10
    - os: osx
      osx_image: xcode10.3
      addons:
        homebrew:
          packages:
            - cmake
            - libomp
            - open-mpi
          update: true
      env: CC=clang CXX=clang++ MAC_LIBOMP=1
